server:
  port: 8081
  servlet:
    context-path: /system_a

spring:
  profiles:
      active: dev
  datasource:
      platform: mysql
      druid:
         # 下面为连接池的补充设置，应用到上面所有数据源中
        # 初始化大小，最小，最大
        # druid 配置: https://github.com/alibaba/druid/wiki/
        initialSize: 1
        minIdle: 1
        maxActive: 20
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 300000
        validationQuery: select 1
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，stat用于监控界面，'wall'用于防火墙防御sql注入, slf4j用于druid记录sql日志
        filters: stat,slf4j,wall
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        useGlobalDataSourceStat: false

mybatis:
      type-aliases-package: com.team.seahouse.domain
      mapper-locations: classpath:mapper/*.xml
      typeHandlersPackage: com.team.seahouse.mapper.typehandler
      configuration:
        #开启驼峰式属性和字段映射
        mapUnderscoreToCamelCase: true
        #打印运行的SQL语句到控制台
        log-impl: org.apache.ibatis.logging.stdout.StdOutImpl

mapper:
    mappers:
        - com.team.seahouse.commons.base.BaseMapper
    notEmpty: true
    identity: MYSQL
    before: false

pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql